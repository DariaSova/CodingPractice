import java.util.*;



public class MinCostPath {
	
	//public class Vertex {
	//	String name;
		
	//}

	static int minPath(int[][] graph, int destination){
		int len = graph.length;
		int[] distance = new int[len];
		boolean[] visited = new boolean[len];
		
		for(int i=0; i<len; i++){
			distance[i] = Integer.MAX_VALUE;
			visited[i] = false;
		}
		//the source
		distance[0] = 0;
		visited[0] = true;
		int minVertex = 0;
		
		for(int i=0; i<len; i++){
			
			for(int j=0; j<len; j++){
				if(graph[minVertex][j]!=0){
					distance[j] = Math.min(distance[j], graph[0][minVertex]+graph[minVertex][j]);
				}
			}
			minVertex = getMin(distance, visited);
			visited[minVertex] = true;
		}
		
		
		return distance[destination];
	}
	
	static int getMin(int[] distance, boolean[] visited){
		int min = 1;
		for(int i=2; i<distance.length; i++){
			if(!visited[min]&&distance[i]<distance[min])
				min = i;
		}
		return min;
	}
	
	
	public static void main(String[] args){
		int[][] array = {{0, 7, 4, 15 },
						{0, 0, 0, 5  },
						{0, 2, 0, 0 },
						{0, 0, 0, 0 }};
		System.out.println(minPath(array, 3));
	}
}
