import java.util.*;

public class Alphabet {
	
	static class Vertex{
		char letter;
		ArrayList<Vertex> incoming;
		ArrayList<Vertex> outgoing;
		
		public Vertex(char c){
			letter = c;
			incoming = new ArrayList<Vertex>();
			outgoing = new ArrayList<Vertex>();
		}
		
		void addIncoming(Vertex in){
			incoming.add(in);
		}
		
		void addOutgoing(Vertex in){
			outgoing.add(in);
		}
		
	}
	
	static class Graph{
		Set<Vertex> vertices;
		public Graph(){
			vertices = new HashSet<Vertex>();
		}
		
		void removeVertex(Vertex v){
			for(Vertex out: v.outgoing){
				out.incoming.remove(v);
			}
			vertices.remove(v);
		}
		
		Vertex findV(char c){
			for(Vertex v: vertices){
				if(v.letter==c)
					return v;
			}
			return null;
		}
	}
	
	
	
	
	public static void main(String[] args){
		String[] words = {"caa", "aaa", "aab"};
		int len = words.length;
		Graph graph = new Graph();
		Set<Character> letters = new HashSet<Character>();
		
		for(int i=0; i<len-1; i++){
			char[] w1 = words[i].toCharArray();
			char[] w2 = words[i+1].toCharArray();
			int j=0;
			while(j<w1.length && j<w2.length && w1[j]==w2[j]){
				j++;
			}
			if(j<w1.length && j<w2.length){
				Vertex v1;
				Vertex v2;
				
				if(letters.contains(w1[j])){
					
				}else{ //new vertex
					Vertex newV = new Vertex(w1[j]);
					newV.outgoing
				}
			}
			
		}
	}

}
